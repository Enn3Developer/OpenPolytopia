<Project Sdk="Godot.NET.Sdk/4.5.0">
  <PropertyGroup>
    <EnableDynamicLoading>true</EnableDynamicLoading>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
    <RootNamespace>OpenPolytopia</RootNamespace>
    <!-- Catch compiler-mismatch issues with the Introspection generator as early as possible -->
    <WarningsAsErrors>CS9057</WarningsAsErrors>
    <!-- Required for some nuget packages to work -->
    <!-- godotengine/godot/issues/42271#issuecomment-751423827 -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- To show generated files -->
    <!-- <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles> -->
    <!--
          <CompilerGeneratedFilesOutputPath>.generated</CompilerGeneratedFilesOutputPath>
        -->
    <DebugType>portable</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Title>OpenPolytopia</Title>
    <Version>0.1.0</Version>
    <Description>OpenPolytopia</Description>
    <Copyright>Â© 2024 Enn3DevPlayer, GamerPlayer888, Remoxx, C0MPL3XDEV</Copyright>
    <Authors>Enn3DevPlayer, GamerPlayer888, Remoxx, C0MPL3XDEV</Authors>
    <Company>Enn3DevPlayer, GamerPlayer888, Remoxx, C0MPL3XDEV</Company>
    <!-- Don't include unit tests in release builds. -->
    <DefaultItemExcludes Condition="'$(Configuration)' == 'ExportRelease'">
      $(DefaultItemExcludes);test/**/*
    </DefaultItemExcludes>
    <TargetFramework>net8.0</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>
  <ItemGroup Condition=" '$(Configuration)' == 'Debug' or '$(Configuration)' == 'ExportDebug' ">
    <!-- Test dependencies go here! -->
    <!-- Dependencies added here will not be included in release builds. -->
    <PackageReference Include="Chickensoft.GoDotTest" Version="1.7.6" />
    <!-- Used to drive test scenes when testing visual code -->
    <PackageReference Include="Chickensoft.GodotTestDriver" Version="3.1.44" />
    <!-- Bring your own assertion library for tests! -->
    <!-- We're using Shouldly for this example, but you can use anything. -->
    <PackageReference Include="Shouldly" Version="4.3.0" />
    <!-- LightMock is a mocking library that works without reflection. -->
    <PackageReference Include="LightMock.Generator" Version="1.2.3" />
    <!-- LightMoq is a Chickensoft package which makes it more like Moq. -->
    <PackageReference Include="LightMoq" Version="0.1.0" />
  </ItemGroup>
  <ItemGroup><!-- Production dependencies go here! -->

    <PackageReference Include="Chickensoft.GameTools" Version="2.1.14" />

    <PackageReference Include="SpacetimeDB.ClientSDK" Version="1.5.0" />

    <PackageReference Include="System.Numerics.Vectors" Version="4.6.1" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove=".github\**" />
  </ItemGroup>
  <ItemGroup>
    <EmbeddedResource Remove=".github\**" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\FSharpLibrary\FSharpLibrary.fsproj" />
    <ProjectReference Include="..\OpenPolytopia.Common\OpenPolytopia.Common.csproj" />
  </ItemGroup>
</Project>
